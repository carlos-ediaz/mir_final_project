// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Lesson {
  id           String         @id @default(uuid()) @db.Uuid
  subject      Subject?       @relation(fields: [subjectId], references: [id])
  subjectId    String         @db.Uuid
  description  String?
  createdAt    DateTime       @default(now())
  scheduledAt  DateTime
  site         String?
  status       String         @default("Pending")
  teacher      Teacher?       @relation(fields: [teacherId], references: [id])
  teacherId    String?        @db.Uuid
  student      Student        @relation(fields: [studentId], references: [id])
  studentId    String         @db.Uuid
  startedAt    DateTime?
  finishedAt   DateTime?
  duration     Int?
  lessonevents LessonEvents[]
}

model Teacher {
  id        String               @id @default(uuid()) @db.Uuid
  status    String               @default("active")
  email     String               @unique
  points    Int                  @default(0)
  name      String?
  lastname  String?
  age       Int?
  password  String?
  joined    DateTime             @default(now())
  updatedAt DateTime?
  lesson    Lesson[]
  subjects  SubjectsOnTeachers[]
}

model Student {
  id        String    @id @default(uuid()) @db.Uuid
  status    String    @default("active")
  email     String    @unique
  name      String
  lastname  String
  age       Int
  password  String?
  joined    DateTime  @default(now())
  updatedAt DateTime?
  lesson    Lesson[]
}

model Subject {
  id          String               @id @default(uuid()) @db.Uuid
  subjectname String
  teachers    SubjectsOnTeachers[]
  Lesson      Lesson[]
}

model SubjectsOnTeachers {
  teacher   Teacher @relation(fields: [teacherId], references: [id])
  teacherId String  @db.Uuid
  subject   Subject @relation(fields: [subjectId], references: [id])
  subjectId String  @db.Uuid

  @@id([teacherId, subjectId])
}

model LessonEvents {
  id        String   @id @default(uuid()) @db.Uuid
  lesson    Lesson   @relation(fields: [lessonId], references: [id])
  lessonId  String   @db.Uuid
  date      DateTime @default(now())
  eventdesc String
  author    String
}
